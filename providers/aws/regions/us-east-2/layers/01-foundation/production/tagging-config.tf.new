# ============================================================================
# Centralized Tagging Configuration
# ============================================================================

module "tags" {
  source = "../../../../../../../modules/tagging"
  
  # Core configuration
  project_name     = var.project_name
  environment      = var.environment
  layer_name       = "01-foundation"
  region           = var.region
  
  # Layer-specific configuration
  layer_purpose    = "VPC, Subnets, NAT Gateways, VPN Infrastructure"
  deployment_phase = "Phase-1"
  
  # Infrastructure classification
  critical_infrastructure = "true"
  backup_required        = "true"
  security_level         = "High"
  
  # Cost management
  cost_center      = "IT-Infrastructure"
  billing_group    = "Platform-Engineering"
  chargeback_code  = "EST02-01FOUNDATION-001"
  
  # Operational settings
  sla_tier           = "Gold"
  monitoring_level   = "Enhanced"
  maintenance_window = "Sunday-02:00-04:00-UTC"
  
  # Governance
  compliance_framework = "SOC2-ISO27001"
  data_classification  = "Internal"
  
  # Network-specific settings
  additional_tags = {
    NetworkTier      = "Foundation"
    VPCPurpose       = "Multi-Tenant-EKS"
    NATConfiguration = "HighAvailability"
  }
}

# Provider configuration with standardized default tags
provider "aws" {
  region = var.region

  default_tags {
    tags = module.tags.standard_tags
  }
}

# ============================================================================
# Locals for Tag Management
# ============================================================================

locals {
  # Standard tags for most resources
  common_tags = module.tags.standard_tags
  
  # Comprehensive tags for critical infrastructure
  critical_tags = module.tags.comprehensive_tags
  
  # Minimal tags for cost-sensitive resources
  minimal_tags = module.tags.minimal_tags
  
  # Client-specific tags for multi-tenant resources (if applicable)
  client_tags = {
    "est_test_a" = merge(
      module.tags.standard_tags,
      {
        Client     = "est_test_a"
        ClientCode = "ETA"
        ClientTier = "Premium"
        TenantType = "Production"
      }
    )
    "est_test_b" = merge(
      module.tags.standard_tags,
      {
        Client     = "est_test_b"
        ClientCode = "ETB"
        ClientTier = "Premium"
        TenantType = "Production"
      }
    )
  }
  
  # Kubernetes labels (if applicable)
  kubernetes_labels = module.tags.kubernetes_labels
}
